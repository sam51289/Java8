package impl;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import dto.Product;

public class StreamExample {

	public static void main(String[] args) {
	
		List<Product> productList = new ArrayList<Product>();
		productList.add(new Product(1, "HP Laptop", 25000f));
		productList.add(new Product(2, "Dell Laptop", 30000f));
		productList.add(new Product(1, "Lenovo Laptop", 29000f));
		productList.add(new Product(1, "Sony Laptop", 25000f));
		productList.add(new Product(1, "Apple Laptop", 90000f));
		
		
		System.out.println("Product List "+productList);
		
		//Filter without stream with price <30000
		List<Product> fileteredList = new ArrayList<Product>();
		productList.forEach(a -> {
			if (a.getPrice() < 30000f) {
				fileteredList.add(a);
			}
		}

		);
		
		System.out.println("Filtered products"+fileteredList);
		
		//With Stream
		List<Product> newFilteredList=productList.stream().filter(p->p.getPrice()<30000).collect(Collectors.toList());
		System.out.println("New Filtered List"+newFilteredList);

		
	}
}
